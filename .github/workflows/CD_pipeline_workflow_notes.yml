# This workflow will build and push a Python application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-python?tabs=bash&pivots=python-framework-flask
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the PYTHON_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples


# this GitHub actions workflow automates the process of deploying our previous build of a Python application to an Azure
# Web App.
name: Build and deploy Python app to Azure Web App

# sets environment variable for the Azure Web App name and the Python version to use 
env:
  AZURE_WEBAPP_NAME: your-app-name  # set this to the name of your Azure Web App
  PYTHON_VERSION: '3.10'              # set this to the Python version to use

# event which trigger workflow: completion of workflow named "CI-pipeline-workflow"
on:
  workflow_run: 
    workflows: ["CI-pipeline-workflow"]
    types: 
      -completed

# set permissions to read the contents of the repository
permissions:
  contents: read

# defines job named deploy that runs on an Ubuntu environment
jobs:
  deploy:
    runs-on: ubuntu-latest

    # the job "deploy" depends on the completion of the job named "build" in the CI-pipeline-workflow 
    needs: CI-pipeline-workflow.build.outputs['job-id']
    # set the enviornment variable for the deployment, including name and URL of Azure web app 
    #        aka defining variables that wil be used during the deployment process to identify and target the specific Azure Web App
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    # downloads an artifact from the CI-pipeline_workflow job using download-artifact action and saves it in the current directory
    #        aka download an artifact refers to retrieving files that were produced by a previous job or workflow run 
      - name: Download artifact from CI pipeline
        uses: actions/download-artifact@v3
        with:
          name: python-app
          path: .

    # copies file to a deployment folder 
      - name: Copy output to deployment folder
        run: |
          mkdir -p deployment
          cp average_ratings_per_sku.csv deployment/

    # deploys contents of the deployment folder to Azure Web App
    # specifies the app name, the publish profile (stored as a secret), and a package 
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: deployment/
